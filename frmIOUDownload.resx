<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fbdMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HQCyh0cAs4Q+ANCKCwDJo2wAxIlCAMVsAADLiQ0A0JYtANJ9AADVuYMA5NO0AOHGkwDn4dkAxp5WANGM
        FADhzKQA3MCLAMejbwDMhgwAs24KAKtkAgDDkk0AtoxUANahPwDChS4Au4IxAL6ORQDKk0QAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fH08DHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8kHhZEHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fHx8cJB4bOUk6Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHyM9HkAdLh5EHx8fHx8f
        Hx8fHx8fHx8fHx8fHx8fHxwaHh4eHEA1OR40Hx8fHx8fHx8fHx8fHx8fHx8fHx8cThYWOgQeOQMzHh46
        Hx8fHx8fHx8fHx8fHx8fHx8fHyUeHhUfFR4GQx8QFhYXHx8fHx8fHx8fHx8fHx8fHx8fEh5SH0ceUjtF
        DR8uHiwfHx8fHx8fHx8fHx8fHx8KLRI7Hk8xHkwXR09FEkUWOiUlHx8fHx8fHx8fHx8fHxoWFjweBh5E
        HCM7DSQ8HhEUPxYtHx8fHx8fHx8fHxwEFhYxJh4YJgwXJ0YMAjc2Fkg7HjkDHx8fHx8fHx8fBBsWJR8V
        HjgLFB4eSgYGO04GLB84ORZEHx8fHx8fHBobHk0fEh5MFxUXOBVDEk1BFy4eFx8IOR4vHx8fHxxPFj0e
        T0geAxcXUEw4OBJPGTsNQU8eIR4jOR5EHx8fGhYWFRweHlEXKQ8kBywSKDsfNxUeLE8eUR8EHh46Hx8w
        FhYBFR4eHhIdF08HQRkZEkY7FRUVNR5PFQseHhcfHx8VFh4eURwkHhcfN0QcJigCDBMfFR5EFz0eSR4X
        Hx8fHx8VFh4BHxxOJBU+TwJPT0QMEyUWKx8MPTk9Fx8fHx8fHx8lHhYkHCUeMztGOxJGMBwBOR4XFx41
        KRcfHx8fHx8fHx8VHkkGKhFLOzIMMBUfQAkeHk8eHh4nHx8fHx8fHx8fHx9COQZKESoGRUc4BRUeHh4e
        Hh5PFx8fHx8fHx8fHx8fHx8yMkgWIDJPFg0VHjEcIx4nFx8fHx8fHx8fHx8fHx8fHx8fQB4kHB9PHh5E
        Hxc9NRcfHx8fHx8fHx8fHx8fHx8fHx9HNR4LHCUGORcsHjUeHB8fHx8fHx8fHx8fHx8fHx8fHx9CFjUe
        FiIOKR41IxcfHx8fHx8fHx8fHx8fHx8fHx8fHx8VHh45HxJFHj0CHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx9CFhZPPR4eFx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8VHh4eHg0fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8VHiQXHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8lRx8fHx8fHx8fHx8fHx8fHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8=
</value>
  </data>
</root>